# 
# Configuration file for Magicc-3
#
# There are 2 columns of data:
# 1st column is an identifier string
# 2nd column is the option value.
#
# First specify device addresses and interface types
#


# upgraded to SerialGear USB to 8 port RS232, 12 Jan 2016
device hp34970            serial ASRL/dev/ttyUSB0::INSTR   0 9600 #19200
device ValcoValves        serial ASRL/dev/ttyUSB1::INSTR   1  9600
device HP35900            serial ASRL/dev/ttyUSB2::INSTR   0 38400 
device Aerodyne           serial ASRL/dev/ttyUSB4::INSTR   0 38400
device ManifoldB_control  serial ASRL/dev/ttyUSB5::INSTR   0  9600  #control the pfp_comms splitter board
##device ManifoldB_host     serial ASRL/dev/ttyUSB7::INSTR   0  9600  #line to pfps
device Picarro            serial ASRL/dev/ttyUSB8::INSTR   1 19200
device ManifoldA_control  serial ASRL/dev/ttyUSB9::INSTR   0  9600  # control the pfp_comms splitter board
##device ManifoldA_host     serial ASRL/dev/ttyUSB10::INSTR   0  9600  #line to pfps


# Serial ports used by pfp comms software. These are setup independently of HM so listed but not setup as a device class
ManifoldA_host     /dev/ttyUSB10 #serial line to pfps on manifold A
ManifoldB_host     /dev/ttyUSB7  #serial line to pfps on manidolf B


# specify hm modules to use for each device (if non-standard)
# module devicename modulename
module   picarro      picarro
module   aerodyne     aerodyne
module   hp34970      scpi
module   valcovalves  valco
module   hp35900      hp35900

# specify device specific conf files
config     picarro   /home/magicc/config/picarro.ini
#config    lgr       /home/magicc/config/lgr.ini
config     aerodyne  /home/magicc/config/aerodyne.ini
#config    hp34970   /home/magicc/config/hp34970.ini
#config    hp35900   /home/magicc/config/hp35900.ini


# Picarro
################################
#
## Temporary data files
picarro_datafile              picarro.dat          
#picarro_high_freq_datafile   picarro_high_freq.dat  
picarro_qc_datafile           picarro_qc.dat        
## *** note, the filename for the picarro high freq data (picarro_high_freq.dat) is defined in /config/picarro.ini so 
#      it is accessable at lower levels of HM to enable storage of data lines. 







# Aerodyne 
################################
#
# Temporary data files
aerodyne_datafile             aerodyne.dat        
#aerodyne_high_freq_datafile  aerodyne_high_freq.dat
aerodyne_qc_datafile          aerodyne_qc.dat    
## *** note, the filename for the Aerodyne high freq data (aerodyne_high_freq.dat) is defined in /config/aerodyne.ini so 
#      it is accessable at lower levels of HM to enable storage of data lines. 


# Device (files) for Aerodyne commands. These are written to the Commands dirtory of the Aerodyne computer
device aerodyne_comm_file                       file   /mnt/ComQue.xyz    0  0
device aerodyne_setup_script_file               file   /mnt/Script_0.xyz  0  0
device aerodyne_fill_script_file                file   /mnt/Script_1.xyz  0  0
device aerodyne_fill_and_start_wd_script_file   file   /mnt/Script_2.xyz  0  0
device aerodyne_stop_wd_script_file             file   /mnt/Script_3.xyz  0  0
device aerodyne_start_wd_script_file            file   /mnt/Script_4.xyz  0  0

#device aerodyne_transient_datafile              file   /transient/aerodyne_transient_data.dat 0  0  # file for retrieving data through file exchange 

# Files for Aerodyne acknowledgements. These are used to confirm Aerodyne recieved the commands. 
aerodyne_setup_script_ack       /mnt/runscript_setup.xyz    # script acknowledgement file, make sure matches handle in runscript command below
#aerodyne_background_script_ack  /mnt/runscript_fill.xyz        # script acknowledgement file, make sure matches handle in runscript command below
aerodyne_fill_script_ack        /mnt/runscript_fill.xyz        # script acknowledgement file, make sure matches handle in runscript command below
aerodyne_stop_wd_script_ack     /mnt/runscript_stop_wd.xyz    # script acknowledgement file, make sure matches handle in runscript command below
aerodyne_start_wd_script_ack    /mnt/runscript_start_wd.xyz    # script acknowledgement file, make sure matches handle in runscript command below
aerodyne_test_comms_file        /mnt/Aerodyne_comms_test.txt      # text file on Aerodyne, use to test if comms established.
aerodyne_transient_datafile     /transient/aerodyne_transient_datafile.txt      # text file on Aerodyne, use to test if comms established.

# Aerodyne commands for stop flow measurements
aerodyne_setup_runscript              runscript_setup,ACK,be0    #make sure script number matches the AR_script_file number above, first term=acknowledgment file
aerodyne_fill_runscript               runscript_fill,ACK,be1    #make sure script number matches the AR_script_file number above, first term=acknowledgment file 
aerodyne_fill_and_start_wd_runscript  runscript_fill,ACK,be2    #make sure script number matches the AR_script_file number above, first term=acknowledgment file 
aerodyne_stop_wd_runscript            runscript_stop_wd,ACK,be3    #make sure script number matches the AR_script_file number above, first term=acknowledgment file 
aerodyne_start_wd_runscript           runscript_start_wd,ACK,be4    #make sure script number matches the AR_script_file number above, first term=acknowledgment file 
 
# Aerodyne commands for setup - use to setup Aerodyne on startup
aerodyne_wd_off         amwd0         # Write AR internal data files, 0=off 1=on
aerodyne_wd_on          amwd1         # Write AR internal data files, 0=off 1=on
aerodyne_gl             amgl0         # Guess last, 0=off, 1=on  Always use OFF
#aerodyne_fl # fl is bimodal filter, no external access to it, set to off in Aerodyne
aerodyne_ass            amass0         # Automatic spectral save, 0=off, 1=on
aerodyne_pn             ampnorm0     # pulse normalization method, always turn off
aerodyne_rs_off         amrs0          # write data to RS232, 0=off, 1=on
aerodyne_rs_on          amrs1          # write data to RS232, 0=off, 1=on
aerodyne_cal            amcal0         # automatic calibrations, 0=off, 1=on
aerodyne_flk4           amrlock1     # frequency lock in field 4, 0=off, 1=on
aerodyne_abg            amabg0         # automatic background method, 0=off, 1=on (magicc code uses this setting to decide to run bgk or not)
aerodyne_abg_external   ayext1      # do background on external command, 0=off, 1=on
aerodyne_abg_duration   aydur10     # sets duration of background measurement in seconds
aerodyne_ebg            amebg0         # electronic background, 0=off, 1=on
aerodyne_pl             amplock0     # pressure lock, 0=off, 1=on  (turn off for stop flow measurements)
aerodyne_stream         af          # go to stream mode 

#Additional Aerodyne commands used in scripts
aerodyne_background         aq         # initiate background measurement
aerodyne_fill               aza0,2,50.0     # fill cell to 50.0 Torr
aerodyne_wait_5             bc5         # pause interval after initiating backgroung measurement
aerodyne_wait_15            bc15         # pause interval after initiating backgroung measurement
aerodyne_spectral_fit_off   bdfits1 # turn off spectral fit  Test to see if we still need this, if don't use then could get pressure readings
aerodyne_sec_delay          bc1  #one second delay
aerodyne_spectral_fit_on    bdfits0 # turn spectal fits back on






# System QC data - storage locations
environment_qc_datafile        environment_qc.dat
sys_evac_qc_datafile           sys_evac_qc.dat
initial_sys_evac_qc_datafile   initial_sys_evac_qc.dat
flask_press_datafile           flask_press.dat




# GC info 
gc_qc_datafile     gc_qc.dat  #filename follows template "inst"_qc.dat
# setup for GC A/D
sample_rate        10
slice_width_a      AVSL 100
slice_width_b      BVSL 100
channel_h2         A
channel_sf6        B
query_a/d          SYID    # command to check serial comm
data_file          gc.tmp #may not use this anymore


# Define system levle log file (used by HM)
log_file           sys.log





# Valco Valves
#####################################

# Virtual Device Information on 2-position valves
#      type = two_position
# name        device       type          id  load_position  Inject_position
GCbypass      ValcoValves  two_position   0   A  B  
SF6_inject    ValcoValves  two_position   8   B  A  
#H2_inject    ValcoValves  two_position   7   A  B   #currently still using old style H2 injection

# Information for old style actuator used for H2 injection valve
h2_load        hp34970        117  120
#h2_load         117  120

# Positions for GC bypass valve
bypass      B
include     A

# Virtual Device Information on multi-position valves
#      type = multiposition
#name            device        type  id   max_positions
ManifoldSelect   ValcoValves  multiposition  1   8
ManifoldA        ValcoValves  multiposition  2  16
ManifoldA_Evac   ValcoValves  multiposition  3   4
ManifoldB        ValcoValves  multiposition  4  16
ManifoldB_Evac   ValcoValves  multiposition  5   4
ManifoldC        ValcoValves  multiposition  6  24
ManifoldD        ValcoValves  multiposition  7   4  

# Define positions on Manifold Select Valve
#    ManifoldSelect valve picks from the two or three sample inlet manifolds.
#    When names refer to valve names defined above, can not have the exact same name so add _port to all
#    
ManifoldA_port            1
ManifoldA_port_off        2
ManifoldB_port            3
ManifoldB_port_off        4
ManifoldC_port            5 # used for standards
ManifoldC_port_off        6
ManifoldD_port            7 # used for R0 and J0
ManifoldD_port_off        8 
ManifoldSelect_off        8

# Define positions of manifold A and B evac valves 
system_on     1
evac_on       3
evac_off      2

# Define off positions of manifold valves (Usally the max port num)
ManifoldA_off    16
ManifoldB_off    16
ManifoldC_off    24
ManifoldD_off     4

# Define which ports to use during water trap drying procedure
ManifoldA_drygas    7
ManifoldB_drygas    1
ManifoldD_drygas    3

# Reference gas location (manifold port). 
R0    D  1  

# Junk air location (manifold port).  Junk air used for continuous aliquots - cycles between J0 and occasional R0 to keep system warm but preserve R0\
# Needs to be on same manifold as R0 b/c pre for next sample logic
J0    D  3  





# HP34970 data aquisition unit
##############################
query_34970     *IDN?  # commands to check serial comm
abort_hp34970   ABOR   # command to abort hp34970 scan

# Misc. relay locations on the HP34970 data aquistion unit
Idle                         101
pc_sample                    102
gc_sample_loop_relax         103
sys_evac                     104
h2_vent_valve                105
Sample_mks_close_valve       106 #MKS 649 valve close. Close relay to stop flow.
Sample_mks_open_valve        107 #MKS 649 valve open. Close relay to open valve fully
idle_mks_close_valve         108 #MKS 640 valve closed relay. Close relay to stop flow.
Aerodyne_evac                109
Aerodyne_N2_prime            110
Aerodyne_N2_purge            111
SF6_vent_valve               112
regulator_purge              113
manifoldA_ready              114
manifoldB_ready              115
#dummy                        120 # dummy relay, not connected to anything


# Location and type of signals on A/D board.
#aerodyne_pressure            201     #DCVOLT
manifold_pressure            201     #DCVOLT
idle_pressure                202     #DCVOLT
sample_flow                  203     #DCVOLT
sample_pressure              204     #DCVOLT
#open                         205    
sample_loop_pressure         206     #DCVOLT
room_pressure                207     #DCVOLT
room_temp                    208     #DCVOLT
UPS_status                   209     #DCVOLT
#open                         210     
chiller_temp                 211     #TC K   #K type thermocouple
ManifoldA_press              212     #DCVOLT, vacuum gauge on manifold A 
ManifoldB_press              213     #DCVOLT, vacuum gauge on manifold B 
trap_humidity                214     #DCVOLT, humidity from trap during trap drying procedure
scroll_pump_pressure         215     #DCVOLT, pressure of Pirani gauge on scroll pump. Use to monitor pump performance

# scaling factors for signals
sample_flow_scale             0    200     #0-5 VDC = 0-1000sccm
sample_pressure_scale         0    100    #0-10 VDC = 0-1000 Torr
idle_pressure_scale           0    100    #0-10 VDC = 0-1000 Torr
manifold_pressure_scale       0     10    #0-10 VDC = 0-100 psia
sample_loop_pressure_scale    0    100    #0-10 VDC = 0-1000 Torr
room_pressure_scale           0    100    #0-10 VDC = 0-1000 Torr
room_temp_scale               0    100
chiller_temp_scale            0      1  #no scaling but need dummy scale for hm code
#ManifoldA_press_scale         0      1    #DCVOLT, vacuum gauge on manifold A (not sure of scaling). non-linear scaling done in code
#ManifoldB_press_scale         0      1    #DCVOLT, vacuum gauge on manifold B (not sure of scaling). rather than in hm
trap_humidity_scale           0      1     # not sure of scaling for humidity
scroll_pump_pressure_scale    0      1     #DCVOLT. Scaling is non-linear function of V, for now just record the voltage as indicator of changes in pump performance


# Sample Manifolds / PFP comms
query_pfp_splitter_control     STATUS  # command to check serial comm to control line of 8:1 pfp splitter board in sample manifold a/b
